From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MagicTeaMC <oneowo87@gmail.com>
Date: Sun, 26 Mar 2023 07:28:28 +0800
Subject: [PATCH] fix Multithreaded Tracker again


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index c3a482afb4c3bb041fd8f55d41d2e22949ab53ab..ea4275546d4a7b86c33a929a58f2bd74a6a74587 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -1,5 +1,6 @@
 package net.minecraft.world.entity;
 
+import com.destroystokyo.paper.util.misc.PooledLinkedHashSets;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableList.Builder;
 import com.google.common.collect.Iterables;
@@ -512,7 +513,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return type;
     }
 
-    public final List<ServerPlayer> getPlayersInTrackRange() {
+    public final PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<ServerPlayer> getPlayersInTrackRange() {
         // determine highest range of passengers
         if (this.passengers.isEmpty()) {
             return ((ServerLevel)this.level).getChunkSource().chunkMap.playerEntityTrackerTrackMaps[this.trackingRangeType.ordinal()]
@@ -537,7 +538,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         type = this.getFurthestEntity(this, chunkMap, type, range);
         // Pufferfish end
 
-        return chunkMap.playerEntityTrackerTrackMaps[type.ordinal()].getObjectsInRange(MCUtil.getCoordinateKey(this));
+        return Objects.requireNonNull(chunkMap.playerEntityTrackerTrackMaps[type.ordinal()].getObjectsInRange(MCUtil.getCoordinateKey(this)));
     }
     // Paper end - optimise entity tracking
     // Paper start - make end portalling safe
